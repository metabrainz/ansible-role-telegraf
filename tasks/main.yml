---
- name: Remove old Telegraf repository keys
  file:
    path: "/etc/apt/trusted.gpg.d/{{ item }}"
    state: absent
  loop:
    - telegraf.gpg
    - telegraf.asc

- name: Install Telegraf repository key
  get_url:
    url: "{{ telegraf_signing_key_url }}"
    checksum: "{{ telegraf_signing_key_checksum | d(omit) }}"
    dest: "{{ telegraf_signing_key_path }}"
    mode: "0644"

- name: Remove old Telegraf repository
  apt_repository:
    repo: >-
      deb https://repos.influxdata.com/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }} stable
    state: absent

- name: Install Telegraf repository
  apt_repository:
    repo: >-
      deb [signed-by={{ telegraf_signing_key_path }}]
      https://repos.influxdata.com/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }} stable
    filename: telegraf
    state: present
    update_cache: yes

- name: Install Telegraf
  apt:
    name: telegraf
    state: present
    policy_rc_d: 101
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install Telegraf configuration
  template:
    src: "{{ item }}.j2"
    dest: "/{{ item }}"
    mode: 0644
  with_items:
    - etc/telegraf/telegraf.conf
    - etc/telegraf/telegraf.d/ansible-inputs.conf
    - etc/telegraf/telegraf.d/ansible-processors.conf
  notify: restart telegraf
  vars:
    _telegraf_outputs: >-
      {{ telegraf_outputs | combine(
        telegraf_group_outputs, telegraf_host_outputs, recursive=True) }}
    _telegraf_inputs: >-
      {{ telegraf_inputs | combine(
        telegraf_group_inputs, telegraf_host_inputs, recursive=True) }}
    _telegraf_processors: >-
      {{ telegraf_processors | combine(
        telegraf_group_processors, telegraf_host_processors, recursive=True) }}
    _telegraf_tags: >-
      {{ telegraf_tags | combine(telegraf_group_tags, telegraf_host_tags) }}

- name: Add telegraf user to required groups
  user:
    name: telegraf
    groups: "{{ item }}"
    append: true
  # groups may not exist yet ¯\_(ツ)_/¯
  ignore_errors: true # noqa ignore-errors
  when: item in _telegraf_inputs
  loop:
    - docker
  notify: restart telegraf
  vars:
    _telegraf_inputs: >-
      {{ telegraf_inputs | combine(telegraf_group_inputs, telegraf_host_inputs) }}

- name: Install telegraf sudo rules
  template:
    src: etc/sudoers.d/ansible-telegraf.j2
    dest: /etc/sudoers.d/ansible-telegraf
    mode: "0640"
    validate: visudo -c -f %s
  vars:
    _telegraf_sudo_commands: >-
      {{ telegraf_sudo_commands + telegraf_group_sudo_commands +
        telegraf_host_sudo_commands }}

- name: Enable and start Telegraf
  service:
    name: telegraf
    enabled: "{{ telegraf_service_enabled }}"
    state: "{{ telegraf_service_state }}"
  ignore_errors: "{{ ansible_check_mode }}"
